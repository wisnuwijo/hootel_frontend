import Head from 'next/head'
import { useEffect, useState } from 'react'
import Auth from './api/auth'
import Link from 'next/link'
import { useRouter } from 'next/router'

export default function home() {

  const [email, setEmail] = useState("")
  const [password, setPassword] = useState("")
  const [isRedirectedToAdmin, setIsRedirectedToAdmin] = useState()

  const [errorMsg, setErrorMsg] = useState("")
  const router = useRouter()

  useEffect(() => {
    let token = localStorage.getItem("token")
    let role = localStorage.getItem("role")

    if (token !== "" && token !== null) {
      setIsRedirectedToAdmin(true)
      if (role === "customer") {
        window.location.href = window.location.origin + "/room"
      } else {
        window.location.href = window.location.origin + "/admin"
      }
    } else {
      setIsRedirectedToAdmin(false)
    }
  }, [])

  const submitHandler = e => {
    e.preventDefault()

    const api = new Auth()
    api.login(email, password).then((res) => {
      try {
        let user = JSON.stringify(res.data.data.user)
        let apiToken = res.data.data.user.api_token
        let roleId = res.data.data.user.role_id
        let roleName = roleId == "1" ? "admin" : "customer"

        localStorage.setItem('user', user)
        localStorage.setItem('token', apiToken)
        localStorage.setItem('role', roleName)

        setErrorMsg("")

        router.push("/room")
      } catch (error) {
        if ("msg" in res.data) {
          setErrorMsg(res.data.msg)
        } else {
          setErrorMsg(error)
        }
      }
    })
  }

  const loginComponent = <div className='container'>
    <div className='row'>
      <div className='col-md-1'></div>
      <div className='col-md-10' style={{ paddingTop: "20px" }}>

        <h3>Login untuk melanjutkan</h3>

        <div className="card" style={{ marginTop: "20px", marginBottom: "20px" }}>
          <div className="card-body">
            <div className="alert alert-danger" role="alert" style={{ display: errorMsg == "" ? "none" : "block" }}>
              {errorMsg}
            </div>

            <form onSubmit={submitHandler}>

              <div className="mb-3">
                <label className="form-label">Alamat Email</label>
                <input type="email" className="form-control" value={email} onChange={(e) => setEmail(e.target.value)} required />
              </div>

              <div className="mb-3">
                <label className="form-label">Kata Sandi</label>
                <input type="password" className="form-control" value={password} onChange={(e) => setPassword(e.target.value)} required />
              </div>

              <table>
                <tbody>
                  <tr>
                    <td>
                      <input type={"submit"} value="Masuk" className='btn btn-md btn-primary' />
                    </td>
                    <td>
                      <Link href="/forget_password">
                        <a style={{ textDecoration: "none", paddingLeft: "10px" }}>
                          <strong>Lupa sandi?</strong>
                        </a>
                      </Link>
                    </td>
                  </tr>
                </tbody>
              </table>

            </form>
          </div>
        </div>
        Belum punya akun?
        <Link href="/register">
          <a style={{ textDecoration: "none", paddingLeft: "10px" }}>
            <strong>Daftar</strong>
          </a>
        </Link>
      </div>
      <div className='col-md-1'></div>
    </div>
  </div>
  
  return (
    <div>
      <Head>
        <title>Hootel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {
        isRedirectedToAdmin !== undefined && !isRedirectedToAdmin
          ? loginComponent
          : "Memuat ..."
      }
    </div>
  )
}
